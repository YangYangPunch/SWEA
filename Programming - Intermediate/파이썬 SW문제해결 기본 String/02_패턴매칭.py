# -*- coding: utf-8 -*-
"""
패턴 매칭
1. 문자열 교체하기
문자열 내에서 '1, 2'라는 문자열을 'one, two'라는 문자열로 변경하는 경우
문자열을 찾는 것을 패턴 매칭이라고 한다.

문자열을 패턴이라고도 하고 패턴을 찾는 것을 패턴 매칭이라고 한다.
3가지 정도의 알고리즘이 있다.
1. 고지식한 패턴 검색 알고리즘(Brute Force)
2. KMP 알고리즘
3. 보이어-무어 알고리즘

1. 고지식한 알고리즘(Brute Force)
본문 문자열을 처음부터 끝까지 차례대로 순회하면서
패턴 내의 문자들을 일일히 비교하는 방식으로 동작(한 칸 이동, 비교)
시간 복잡도
최악의 경우 O(MN)이 됌, M: String의 길이, N: 찾는 패턴의 길이

2. KMP 알고리즘
불일치가 발생한 텍스트 문자열의 앞 부분에 어떤 문자가 있는지를 미리 알고 있으므로,
불일치가 발생한 앞 부분에 대하여 다시 비교를 하지 않고 매칭을 수행

1) 패턴을 전처리하여 배열 next[M]을 구해서 잘못된 시작을 최소화함
next[M]: 불일치가 발생했을 경우 이동할 다음 위치
2) 시간 복잡도: O(M + N)

3. 보이어-무어 알고리즘
오른쪽에서 왼쪽으로 비교, 대부분의 상용 소프트웨어에서 채택하고 있는 알고리즘
패턴에 오른쪽 끝에 있는 문자가 불일치하고, 이 문자가 패턴 내에 존재하지 않는 경우,
이동거리는 패턴의 길이 만큼이 됨

ex) rithm 찾기
m: 0, h: 1, t: 2, i: 3, r: 4 만큼 이동 시킨다.
오른쪽 문자인 m을 기준으로 위의 문자를 만나면 해당 숫자만큼 오른쪽으로 이동,
위에 문자가 아닌 다른 문자를 만난다면 5만큼 오른쪽으로 이동시킨다.
시간 복잡도
최악의 경우 수행시간: O(MN)이지만 일반적으로 수행시간 O(n) 보다 적음


"""











