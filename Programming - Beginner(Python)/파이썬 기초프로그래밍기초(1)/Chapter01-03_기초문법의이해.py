"""
서로 다른 자료형을 나타낼 때 문자열 포맷팅 사용
%-포맷팅, str.format() 함수를 이용한 문자열 포맷팅

1. %-포맷팅
's': 문자열 포맷
'c': 문자 포맷. 정수를 유니코드 문자로 변환해 출력
'd': 10진 정수로 출력
'o': 8진수로 출력
'x': 16진수로 출력
'f': 부동소수점 숫자로 출력. 소수점 이하 6자리의 정밀도를 기본값으로 가짐
'0.2f': 소수점 2자리까지 표현
'10.2f': 문자열 10개, 소수점 2자리까지 표현
'010.2f': 문자열 10개, 소수점 2자리까지 표현, 나머지 '0'으로 채움
'%': % 문자 자체를 출력
'%%': %문자 자체를 문자열 내에 포함될 수 있도록 함
'%10s': 문자열 10개, 우측정렬
'%-10s': 문자열 10개, 좌측정렬
2개 이상의 문자열을 전달할 때 tuple이나 diction을 사용


2. str.format() 함수
시작 위치는 0부터, 순서가 아닌 인덱스의 영향을 받음
문자열 내의 {}에서 ':' 뒤에 문자열 표시 유형을 사용해 포맷 지정
ex) {0:c} = 0번째 값을 문자로 변환
    {1:2f} = 1번째 값을 소수점 2자리까지 출력
str.format() 함수에서 이름=값 형식으로 인자를 구성하면 일므을 이용해 인자 전달 가능
"{0:<10}".format("~~"): 문자열 길이 10, 좌측정렬
"{0:>10}".format("~~"): 문자열 길이 10, 우측정렬
"{0:^10}".format("~~"): 문자열 길이 10, 중앙정렬
"{0:*^10}".format("~~"): 문자열 길이 10, 중앙정렬, 공백 *로 채움
"{0:010.4f}".format("3.141592"): 문자열 길이 10, 소수점 4자리까지 표현, 공백 0으로 표현
"""

